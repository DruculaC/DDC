C51 COMPILER V9.01   PWM                                                                   08/27/2013 10:51:49 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\out\pwm.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE pwm.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND PRINT(.\li
                    -sting\pwm.lst) OBJECT(.\out\pwm.obj)

line level    source

   1          #include<N79E81x.h>
   2          #include <intrins.h>
   3          #include"pwm.h"
   4          
   5          
   6          UINT16 PWM_shadow;
   7          
   8          //--------------------------------------------------------------------------------------------------------
             ----
   9          void Init_PWM(void)
  10          {    
  11   1          PWMCON0 = 0xC0;                     // Enable PWM and select auto reload mode    
  12   1      
  13   1          PWM_shadow = PWMP;
  14   1          PWMPH = HIBYTE(PWM_shadow);         // PWM Period
  15   1          PWMPL = LOBYTE(PWM_shadow);                               
  16   1      }
  17          //void PWM_Pin_Recover_IO(void)
  18          //{
  19          //    PWMCON0 = 0x00;// 
  20          //    PWMCON1 = 0x00;// 
  21          //    PWMCON2 = 0x00;// 
  22          //    PWMPH   = 0x00;// 
  23          //    PWMPL   = 0x00;// 
  24          //    PWM0H   = 0x00;// 
  25          //    PWM0L   = 0x01;// 
  26          //    PWM1H   = 0x00;// 
  27          //    PWM1L   = 0x01;// 
  28          //    PWM2H   = 0x00;// 
  29          //    PWM2L   = 0x01;// 
  30          //    PWM3H   = 0x00;// 
  31          //    PWM3L   = 0x01;// PWMP < PWMn Duty, PWM Pin Output High(no-active)
  32          //    PWMCON0 = 0xD0;// PWM Run
  33          //    _nop_ ();      // NOP
  34          //    PWMCON0 = 0x2F;// PWM Stop
  35          //}
  36          void PWM_Channel(E_PWMCNL_SEL Channel)   //选择PWM输出通道
  37          {
  38   1          switch(Channel)
  39   1          {
  40   2              case E_CHANNEL0:
  41   2                  PWM_shadow=PWM0_Duty;
  42   2                  PWM0H = HIBYTE(PWM_shadow);// PWM0 Duty (P0.1)
  43   2                  PWM0L = LOBYTE(PWM_shadow);
  44   2                  break;
  45   2              case E_CHANNEL1:
  46   2                  PWM_shadow=PWM1_Duty;
  47   2                  PWM1H = HIBYTE(PWM_shadow);// PWM1 Duty (P1.6)
  48   2                  PWM1L = LOBYTE(PWM_shadow);
  49   2                  break;
  50   2              case E_CHANNEL2:
  51   2                  PWM_shadow=PWM2_Duty;
  52   2                  PWM2H = HIBYTE(PWM_shadow);// PWM2 Duty (P1.7)
  53   2                  PWM2L = LOBYTE(PWM_shadow);
C51 COMPILER V9.01   PWM                                                                   08/27/2013 10:51:49 PAGE 2   

  54   2                  break;
  55   2              case E_CHANNEL3:
  56   2                  PWM_shadow=PWM3_Duty;
  57   2                  PWM3H = HIBYTE(PWM_shadow);// PWM3 Duty (P0.0)
  58   2                  PWM3L = LOBYTE(PWM_shadow);
  59   2                  break; 
  60   2          }
  61   1      }
  62          //void Enabled_Brake_Function(void)
  63          //{
  64          //    PWMCON1 = 0x30;                    // PWM is running. PWM will be stopped when P0.2 is low level.
  65          //}
  66          
  67          void myPwm()
  68          {
  69   1              PWM_Channel(E_CHANNEL0);           // Select PWM channel.
  70   1          Init_PWM();                        // Enable PWM function and set PWM period.  
  71   1          //Enabled_Brake_Function();          // Enable Brake funciton.
  72   1      }
  73          
  74          
  75          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    100    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
